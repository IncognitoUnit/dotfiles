#!/usr/bin/env bash
#                _ _                              
# __      ____ _| | |_ __   __ _ _ __   ___ _ __  
# \ \ /\ / / _` | | | '_ \ / _` | '_ \ / _ \ '__| 
#  \ V  V / (_| | | | |_) | (_| | |_) |  __/ |    
#   \_/\_/ \__,_|_|_| .__/ \__,_| .__/ \___|_|    
#                   |_|         |_|               
#  
# by Stephan Raabe (2023) 
# ----------------------------------------------------- 

# Cache file for holding the current wallpaper
cache_file="$HOME/.cache/current_wallpaper"
rasi_file="$HOME/.cache/current_wallpaper.rasi"
wallpaper_dir="$HOME/Pictures/Wallpapers"
dir="$HOME/.config/rofi/launchers/type-1"
theme="style-wallpaper"


# Create cache file if not exists
if [ ! -f $cache_file ] ;then
    touch $cache_file
    echo "$wallpaper_dir/default.jpg" > "$cache_file"
fi

# Create rasi file if not exists
if [ ! -f $rasi_file ] ;then
    touch $rasi_file
    echo "* { current-image: url(\"$wallpaper_dir/default.jpg\", height); }" > "$rasi_file"
fi

current_wallpaper=$(cat "$cache_file")

case $1 in

    # Load wallpaper from .cache of last session 
    "init")
        echo "Init"
        if [ -f $cache_file ]; then
            wal -q -i $current_wallpaper
        else
            wal -q -i $wallpaper_dir/
        fi
    ;;

    # Select wallpaper with rofi
    "select")
    	echo "Select"
        selected=$( find "$wallpaper_dir" -type f \( -iname "*.jpg" -o -iname "*.jpeg" -o -iname "*.png" \) -exec basename {} \; | while read rfile
        do
            echo -en "$rfile\x00icon\x1f$wallpaper_dir/${rfile}\n"
        done | rofi -dmenu -i -p "ï€¾  Select wallpaper: " -theme ${dir}/${theme}.rasi)
        if [ ! "$selected" ]; then
            echo "No wallpaper selected"
            exit
        fi
        wal -q -i $wallpaper_dir/$selected
    ;;

    # Randomly select wallpaper 
    *)
    	echo "Random"
        wal -q -i $wallpaper_dir/
    ;;

esac

# ----------------------------------------------------- 
# Load current pywal color scheme
# ----------------------------------------------------- 
source "$HOME/.cache/wal/colors.sh"
echo "Wallpaper: $wallpaper"

# ----------------------------------------------------- 
# Write selected wallpaper into .cache files
# ----------------------------------------------------- 
echo "$wallpaper" > "$cache_file"
echo "* { current-image: url(\"$wallpaper\", height); }" > "$rasi_file"

# ----------------------------------------------------- 
# get wallpaper image name
# ----------------------------------------------------- 
newwall=$(echo $wallpaper | sed "s|$wallpaper_dir/||g")

# ----------------------------------------------------- 
# Set the new wallpaper
# -----------------------------------------------------
transition_type="wipe"
#transition_type="outer"
#transition_type="random"

swww img $wallpaper \
    --transition-bezier .43,1.19,1,.4 \
    --transition-fps=60 \
    --transition-type=$transition_type \
    --transition-duration=1.0 \
    --transition-pos "$( hyprctl cursorpos )"

# ----------------------------------------------------- 
# Update themes of applications
# -----------------------------------------------------
. $HOME/.config/mako/update_colors
pywalfox update
walogram -s
pywal-discord -t default
#. $HOME/.config/spicetify/Themes/Pywal/update_colors

# ----------------------------------------------------- 
# Send notification
# ----------------------------------------------------- 
notify-send -u low "Colors and Wallpaper updated" "with image $newwall"

echo "DONE!"
